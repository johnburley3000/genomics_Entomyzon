library("dplyr")
library("readr")

# EASIEST WAY TO READ IN WAS FILE>IMPORT. EG:

idx_bf_nsw <- read_delim("~/Documents/Harvard/genome_assembly3/scaffold coverage/idxstats_BFHE_NSW_76677_2.txt", 
                                      "\t", escape_double = FALSE, col_names = FALSE)
idx_bf_nt <- read_delim("~/Documents/Harvard/genome_assembly3/scaffold coverage/idxstats_BFHE_NT_336114.txt", 
                          "\t", escape_double = FALSE, col_names = FALSE)

#new column =doc = (#mapped reads)/scaffold length
idx_bf_nsw$bf_nsw <- idx_bf_nsw$X3/idx_bf_nsw$X2
idx_bf_nt$bf_nt <- idx_bf_nt$X3/idx_bf_nt$X2

# histogram of depth equivelant for female genome (from reads mapped onto a male genome)
hist(idx_bf_nsw$bf_nsw, xlim=c(0,1), breaks=5000, ylim=c(1,600))
summary(idx_bf_nsw$bf_nsw)

# histogram of read depth for male genome (from reads mapped onto a male genome)
hist(idx_bf_nt$bf_nt, xlim=c(0,1), breaks=50000, ylim=c(1,600))
summary(idx_bf_nt$bf_nt)

# new dataframe: for each scaffold, average read depth for 1 female and 1 male
data1 <- data.frame(scaffold = idx_bf_nsw$X1, cov_bf_nsw_female = idx_bf_nsw$bf_nsw, cov_bf_nt_male = idx_bf_nt$bf_nt)
data1$ratio_fm <- data1$cov_bf_nsw_female/data1$cov_bf_nt_male
hist(data1$ratio_fm,breaks = 5000, xlim = c(-1,10))
hist(data1$ratio_fm,breaks = 10000, xlim = c(0,3))
hist(data1$ratio_fm,breaks = 10000, xlim = c(0,1))
# Try excluding scaffolds under a certain length
data1$scaf<-seq.int(nrow(data1)) - 1 # add a new row with scaffold number
data1$scaf_length<-idx_bf_nsw$X2
#plot scaffold sizes
plot(data1$scaf, data1$scaf_length) 
plot(data1$scaf, data1$scaf_length,ylim=c(0,5E4)) 
plot(data1$scaf, data1$scaf_length, ylim=c(0,1E4)) #there's an interesting change at cut-off at 2E3 (scaf number and size
ssf <- 10E3 #scaffold size filter, which is used in generating a filtered scaffold list
#the 50kb cutoff seems to have a good combo of high peaks and fewer in-betweeners
#the 10kb cutoff is around about where scaffold size drops off and flatens out
data2 <- filter(data1, scaf_length>ssf) # makes a new dataset # makes a new dataset
hist(data2$ratio_fm,breaks = 100, xlim = c(0,2))
#OR scaffold number filter:
snf <- 750
data3 <- filter(data1, scaf < snf) 
hist(data3$ratio_fm,breaks = 100, xlim = c(0,3))


# make a new column to mark infered z-linked scaffolds, and weird stuff.
tl <- 0.6 # set a lower threshold, below which the scaffolds are assumed to be on z-scaffold.
tu <- 1.2 # set an upper threshold, above which, weird stuff is happening 
# (i.e. I don't understand why coverage would be so much higher for chromosomes on female )
abline(v = tl, untf = FALSE, col = "red", lty = 2)

# Use the line above to guide cutoff of ratio to delimte z-linked scaffolds


data2$class <- c("z-linked", "autosomal", "weird")[ findInterval(data2$ratio_fm, c(0, tl, tu, Inf)) ]

# shows the number of each class of scaffolds, restricted to a specified number of scaffolds
count(data2, class)
count(filter(data2, scaf <100), class)
count(filter(data2, scaf <500), class)
count(filter(data2, scaf <1000), class)
count(filter(data2, scaf <1500), class)
count(filter(data2, scaf <2000), class)
count(filter(data2, scaf < snf), class)

# output a list of putative z-linked chromosomes with f:m depth of coverage < tl
# and scaffold size > ssf
# caution: this means that scaffolds below this size should be filtered out before analyeses - they might be z-linked
print(ssf)
print(tl)
ztable <- filter(data1, ratio_fm < tl & scaf_length > ssf)
zlist <- as.character(ztable$scaffold)

stable <- filter(data1, scaf_length > ssf)
slist <- as.character(stable$scaffold)

# Don't forget to change file name before writing !
write(zlist, "data_output/zlist_tu<0.6_ssf= __ kb.txt", sep=",") # z-linked scaffolds
write(slist, "data_output/slist_ssf=50kb.txt", sep=",") # big scaffolds

# # Notes:
# Filter scaffolds based on length not number because they do not always correspond

